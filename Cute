--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v79=0;while true do if (v79==0) then v19=v0(v3(v30,1,1));return "";end end else local v80=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==1) then return v90;end if (v89==0) then v90=v5(v80,v19);v19=nil;v89=1;end end else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=0 -0 ;local v82;while true do if (v81==(0 -0)) then v82=(v31/(2^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v82-(v82%(928 -(214 + 713))) ;end end else local v83=0 + 0 ;local v84;while true do if (v83==(0 + (1637 -(1523 + 114)))) then v84=2^(v32-((790 + 88) -(282 + 595))) ;return (((v31%(v84 + v84))>=v84) and 1) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (v37==1) then return (v41 * ((40025592 -23247106) -(226 + 1044))) + (v40 * (285370 -219834)) + (v39 * ((689 -316) -((58 -26) + 85))) + v38 ;end if (v37==(0 + (350 -(87 + 263)))) then v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;v37=1;end end end local function v24() local v42=v23();local v43=v23();local v44=181 -(40 + 27 + 113) ;local v45=(v20(v43,1 + 0 ,(178 -129) -29 ) * ((3 -1)^(6 + 26))) + v42 ;local v46=v20(v43,37 -16 ,31 + 0 );local v47=((v20(v43,(85 -61) + 8 )==(3 -(861 -(814 + 45)))) and  -(953 -(802 + 150))) or (2 -1) ;if (v46==(442 -(416 + 26))) then if (v45==(0 -0)) then return v47 * (0 + (0 -0)) ;else v46=1 -0 ;v44=0 + 0 ;end elseif (v46==(2477 -(44 + 21 + 365))) then return ((v45==(1486 -(998 + 488))) and (v47 * ((998 -(324 + 591 + 82))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(596 + 427) ) * (v44 + (v45/((2 -0)^(1239 -(1069 + 118))))) ;end local function v25(v48) local v49=885 -(261 + 624) ;local v50;local v51;while true do if (v49==(3 -1)) then v51={};for v91=(849 + 232) -(1020 + (1115 -(87 + 968))) , #v50 do v51[v91]=v2(v1(v3(v50,v91,v91)));end v49=(5593 -4167) -(630 + 793) ;end if (v49==(0 -0)) then v50=nil;if  not v48 then local v103=0 -0 ;while true do if (v103==(0 + 0 + 0)) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=(7694 -5946) -(760 + 987) ;end if (v49==(1914 -(1789 + 124))) then v50=v3(v16,v18,(v18 + v48) -(767 -(745 + 21)) );v18=v18 + v48 ;v49=1 + 1 ;end if ((7 -4)==v49) then return v6(v51);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if (v52~= #",") then else local v87=(function() return 0;end)();while true do if (0==v87) then v57=(function() return v23();end)();v58=(function() return {};end)();v87=(function() return 1;end)();end if (v87==(889 -(117 + 771))) then for v107= #":",v57 do local v108=(function() return 402 -(108 + 294) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if ((1490 -(570 + 919))~=v108) then else v111=(function() return nil;end)();while true do if (v109== #"}") then if (v110== #">") then v111=(function() return v21()~=0 ;end)();elseif (v110==(2 -0)) then v111=(function() return v24();end)();elseif (v110~= #"asd") then else v111=(function() return v25();end)();end v58[v107]=(function() return v111;end)();break;end if (v109==(811 -(569 + 242))) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121~=(0 -0)) then else v122=(function() return 0;end)();while true do if (v122~=0) then else v110=(function() return v21();end)();v111=(function() return nil;end)();v122=(function() return 1;end)();end if (v122~=1) then else v109=(function() return  #" ";end)();break;end end break;end end end end break;end if (v108==0) then local v114=(function() return 0 + 0 ;end)();while true do if (v114==1) then v108=(function() return 1025 -(706 + 318) ;end)();break;end if (v114==0) then v109=(function() return 0;end)();v110=(function() return nil;end)();v114=(function() return 1252 -(721 + 530) ;end)();end end end end end v56[ #"nil"]=(function() return v21();end)();v87=(function() return 2;end)();end if (v87==(1273 -(945 + 326))) then v52=(function() return 2;end)();break;end end end if ((4 -2)==v52) then for v93= #"[",v23() do local v94=(function() return 0 + 0 ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v94==(701 -(271 + 429))) then while true do if (0~=v95) then else v96=(function() return v21();end)();if (v20(v96, #"~", #"]")~=0) then else local v115=(function() return 0;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();local v119=(function() return;end)();while true do if (v115==(1 + 0)) then local v123=(function() return 0;end)();while true do if (1~=v123) then else v115=(function() return 2;end)();break;end if (v123==(1500 -(1408 + 92))) then v118=(function() return nil;end)();v119=(function() return nil;end)();v123=(function() return 1;end)();end end end if (v115~=(1088 -(461 + 625))) then else while true do if (v116== #"~") then local v194=(function() return 0;end)();local v195=(function() return;end)();while true do if (0==v194) then v195=(function() return 1288 -(993 + 295) ;end)();while true do if (1~=v195) then else v116=(function() return 2;end)();break;end if ((0 + 0)==v195) then v119=(function() return {v22(),v22(),nil,nil};end)();if (v117==0) then local v408=(function() return 0;end)();local v409=(function() return;end)();while true do if (v408==(0 + 0)) then v409=(function() return 0 + 0 ;end)();while true do if (v409==0) then v119[ #"-19"]=(function() return v22();end)();v119[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v117== #":") then v119[ #"asd"]=(function() return v23();end)();elseif (v117==2) then v119[ #"xnx"]=(function() return v23() -((1 + 1)^(5 + 11)) ;end)();elseif (v117== #"91(") then local v428=(function() return 529 -(406 + 123) ;end)();local v429=(function() return;end)();while true do if (0~=v428) then else v429=(function() return 0;end)();while true do if (v429==0) then v119[ #"91("]=(function() return v23() -(2^(1785 -(1749 + 20))) ;end)();v119[ #"0836"]=(function() return v22();end)();break;end end break;end end end v195=(function() return 1;end)();end end break;end end end if (v116~= #"nil") then else if (v20(v118, #"-19", #"xnx")~= #"\\") then else v119[ #"asd1"]=(function() return v58[v119[ #".dev"]];end)();end v53[v93]=(function() return v119;end)();break;end if ((0 + 0)==v116) then local v197=(function() return 0;end)();local v198=(function() return;end)();while true do if (v197==(1322 -(1249 + 73))) then v198=(function() return 0;end)();while true do if (v198==0) then v117=(function() return v20(v96,1 + 1 , #"91(");end)();v118=(function() return v20(v96, #"0313",6);end)();v198=(function() return 1;end)();end if (v198==1) then v116=(function() return  #".";end)();break;end end break;end end end if (v116==(1147 -(466 + 679))) then local v199=(function() return 0;end)();local v200=(function() return;end)();while true do if ((0 -0)~=v199) then else v200=(function() return 0 -0 ;end)();while true do if (v200~=(1901 -(106 + 1794))) then else v116=(function() return  #"gha";end)();break;end if (v200~=(0 + 0)) then else if (v20(v118, #",", #"<")== #".") then v119[2]=(function() return v58[v119[1 + 1 ]];end)();end if (v20(v118,5 -3 ,5 -3 )~= #"/") then else v119[ #"xnx"]=(function() return v58[v119[ #"nil"]];end)();end v200=(function() return 1;end)();end end break;end end end end break;end if (v115~=(114 -(4 + 110))) then else local v124=(function() return 584 -(57 + 527) ;end)();local v125=(function() return;end)();while true do if (v124==0) then v125=(function() return 1427 -(41 + 1386) ;end)();while true do if (v125==(104 -(17 + 86))) then v115=(function() return 1 + 0 ;end)();break;end if (v125~=(0 -0)) then else v116=(function() return 0;end)();v117=(function() return nil;end)();v125=(function() return 1;end)();end end break;end end end end end break;end end break;end if (v94==(0 -0)) then local v112=(function() return 166 -(122 + 44) ;end)();local v113=(function() return;end)();while true do if (0~=v112) then else v113=(function() return 0;end)();while true do if ((0 -0)==v113) then v95=(function() return 0;end)();v96=(function() return nil;end)();v113=(function() return 1;end)();end if (v113~=1) then else v94=(function() return 3 -2 ;end)();break;end end break;end end end end end for v97= #"!",v23() do v54[v97-#"/" ]=(function() return v28();end)();end return v56;end if (v52~=0) then else local v88=(function() return 0;end)();while true do if (v88~=1) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v88=(function() return 2 + 0 ;end)();end if (v88~=(0 + 0)) then else v53=(function() return {};end)();v54=(function() return {};end)();v88=(function() return 1 -0 ;end)();end if (v88~=(67 -(30 + 35))) then else v52=(function() return  #"|";end)();break;end end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[2];local v64=v59[3];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=1258 -(1043 + 214) ;local v70= -(3 -2);local v71={};local v72={...};local v73=v12("#",...) -(1213 -(323 + 889)) ;local v74={};local v75={};for v85=0 -0 ,v73 do if ((4525>4519) and (v85>=v67)) then v71[v85-v67 ]=v72[v85 + 1 ];else v75[v85]=v72[v85 + (581 -(361 + 219)) ];end end local v76=(v73-v67) + (321 -(53 + 267)) ;local v77;local v78;while true do local v86=0;while true do if ((v86==(0 + 0)) or (378>1851)) then v77=v65[v69];v78=v77[1];v86=1 + 0 ;end if ((3178>972) and (v86==1)) then if ((4766==4766) and (v78<=(454 -(15 + 398)))) then if (v78<=(1002 -(18 + 964))) then if ((v78<=(33 -24)) or (1948>=3476)) then if (v78<=4) then if ((v78<=1) or (2745>3128)) then if ((v78>0) or (1144>=4606)) then v75[v77[2]]=v77[2 + 1 ]~=(0 + 0) ;elseif (v75[v77[852 -(15 + 5 + 830) ]]==v77[4]) then v69=v69 + 1 ;else v69=v77[3 + 0 ];end elseif ((4794>=833) and (v78<=((172 -44) -(116 + 10)))) then local v127=v66[v77[1 + 0 + 2 ]];local v128;local v129={};v128=v10({},{__index=function(v201,v202) local v203=738 -(542 + 196) ;local v204;while true do if ((3338>=277) and ((0 -0)==v203)) then v204=v129[v202];return v204[1 + 0 ][v204[2 + 0 ]];end end end,__newindex=function(v205,v206,v207) local v208=0 + 0 ;local v209;while true do if ((4090==4090) and (v208==(0 -0))) then v209=v129[v206];v209[2 -1 ][v209[1553 -(1126 + 425) ]]=v207;break;end end end});for v210=406 -(118 + 287) ,v77[15 -11 ] do v69=v69 + ((2969 -(559 + 1288)) -(118 + 1003)) ;local v211=v65[v69];if (v211[1]==(52 -34)) then v129[v210-(378 -(142 + 235)) ]={v75,v211[980 -(553 + 424) ]};else v129[v210-(1 -0) ]={v60,v211[2 + 1 ]};end v74[ #v74 + (2 -1) + 0 ]=v129;end v75[v77[2 + 0 ]]=v29(v127,v128,v61);elseif (v78>(6 -3)) then local v221=0 -0 ;local v222;local v223;local v224;local v225;while true do if ((2610>2560) and ((v221==(0 -0)) or (3758==2498))) then v222=v77[1 + (4 -3) ];v223,v224=v68(v75[v222](v75[v222 + (4 -3) ]));v221=754 -(239 + 514) ;end if (v221==(1 + 0)) then v70=(v224 + v222) -1 ;v225=1329 -(797 + 532) ;v221=2 + 0 ;end if ((v221==(1 + 1)) or (2673<1575) or (1194>3083)) then for v375=v222,v70 do v225=v225 + (2 -1) ;v75[v375]=v223[v225];end break;end end else local v226=1202 -(14 + 359 + 829) ;local v227;while true do if ((916>=747) and ((v226==0) or (3721<=1455))) then v227=v77[733 -(476 + 255) ];v75[v227]=v75[v227]();break;end end end elseif (((934<2270) and (v78<=(1136 -(369 + 761)))) or (2444>2954)) then if (v78>(3 + 2)) then v75[v77[2 -0 ]]=v77[(18 -13) -2 ];else v75[v77[240 -(64 + 174) ]]=v60[v77[1 + 2 ]];end elseif (v78<=7) then v75[v77[2 -0 ]]=v61[v77[339 -(144 + 192) ]];elseif (v78>(224 -(42 + 174))) then v75[v77[2 + 0 ]]=v61[v77[3 + 0 ]];else local v230=v77[1 + 1 ];local v231=v77[1508 -(363 + 1141) ];local v232=v230 + (1582 -(1183 + 397)) ;local v233={v75[v230](v75[v230 + 1 + 0 ],v75[v232])};for v301=1,v231 do v75[v232 + v301 ]=v233[v301];end local v234=v233[1 + 0 ];if v234 then local v344=1975 -(680 + 1233 + 62) ;while true do if (v344==0) then v75[v232]=v234;v69=v77[2 + 1 ];break;end end else v69=v69 + (2 -(1 + 0)) ;end end elseif (v78<=((5777 -3830) -(565 + 1368))) then if (v78<=11) then if (v78==(37 -27)) then v75[v77[1663 -(1477 + 184) ]]=v77[3 -0 ];else v75[v77[2]]=v75[v77[3 + 0 ]][v77[860 -(564 + 292) ]];end elseif (v78<=((11 + 9) -8)) then v75[v77[(8 -3) -3 ]]={};elseif ((2892<3514) and (v78>(317 -(244 + 60)))) then do return;end else v75[v77[2 + 0 + 0 ]]=v75[v77[479 -(41 + 242 + 193) ]] + v75[v77[1005 -(938 + 63) ]] ;end elseif ((533==533) and (v78<=17)) then if ((595<=3413) and ((v78<=15) or (1612==1255))) then v75[v77[2 + 0 ]][v77[1128 -(936 + 136 + 53) ]]=v75[v77[2 + 2 ]];elseif (v78==(1629 -(1565 + 48))) then local v236=0 + 0 ;local v237;while true do if (v236==(1138 -(657 + 125 + 356))) then v237=v77[269 -(176 + 90 + 1) ];v75[v237]=v75[v237](v75[v237 + ((435 -(153 + 280)) -1) ]);break;end end else v75[v77[2]]=v75[v77[4 -1 ]];end elseif (v78<=(1110 -(975 + 117))) then v75[v77[1877 -(157 + 1718) ]]=v75[v77[3 + 0 ]];elseif (v78>(67 -48)) then if (v75[v77[6 -4 ]]<v75[v77[1022 -(697 + (926 -605)) ]]) then v69=v69 + (2 -1) ;else v69=v77[5 -2 ];end elseif  not v75[v77[4 -2 ]] then v69=v69 + 1 + 0 + 0 ;else v69=v77[3];end elseif ((3078>=2591) and (v78<=(56 -26))) then if ((3199<4030) and (v78<=(66 -41))) then if ((v78<=((494 + 755) -(322 + 905))) or (4352<4206)) then if ((v78==(632 -(602 + 9))) or (2860<=181)) then for v213=v77[2],v77[1192 -(449 + 740) ] do v75[v213]=nil;end else do return v75[v77[874 -(826 + 25 + 21) ]];end end elseif (v78<=23) then if (v77[949 -(245 + 702) ]==v75[v77[4]]) then v69=v69 + 1 ;else v69=v77[9 -6 ];end elseif (v78==(8 + 16)) then v69=v77[1901 -(260 + 1638) ];else local v242=v77[(402 + 40) -(382 + 58) ];local v243={v75[v242](v75[v242 + 1 ])};local v244=0 + 0 + 0 ;for v304=v242,v77[4] do local v305=0 -0 ;while true do if (v305==0) then v244=v244 + (2 -1) ;v75[v304]=v243[v244];break;end end end end elseif ((777<2078) and (v78<=(1232 -(902 + 303)))) then if ((1696<=2282) and (v78>(56 -30))) then if (v75[v77[4 -2 ]]~=v75[v77[(1 -0) + 2 + 1 ]]) then v69=v69 + ((2358 -(89 + 578)) -(1121 + 407 + 162)) ;else v69=v77[217 -(22 + 192) ];end elseif (v75[v77[685 -(483 + 200) ]]==v75[v77[(3049 -1582) -(1404 + 59) ]]) then v69=v69 + (2 -(1050 -(572 + 477))) ;else v69=v77[3];end elseif ((3222>=1527) and (v78<=((5 + 32) -(6 + 3)))) then local v146=765 -(468 + 297) ;local v147;while true do if ((v146==((68 + 494) -(334 + 228))) or (1761>=2462)) then v147=v77[2];v75[v147](v75[v147 + (3 -2) ]);break;end end elseif (v78==(66 -37)) then v75[v77[2 -0 ]][v77[1 + 2 ]]=v77[240 -(141 + 95) ];elseif (v75[v77[2 + 0 ]]==v75[v77[4]]) then v69=v69 + (2 -1) ;else v69=v77[3];end elseif (v78<=(84 -49)) then if ((4551>2328) and (v78<=(8 + 24))) then if ((3825>=467) and (1505<=2121) and (v78>31)) then local v148=0 -0 ;local v149;local v150;local v151;while true do if ((v148==(1 + 0)) or (2890==557)) then v151=v77[3];for v348=(87 -(84 + 2)) + 0 ,v151 do v150[v348]=v75[v149 + v348 ];end break;end if (v148==(0 -0)) then v149=v77[2 + 0 ];v150=v75[v149];v148=(269 -105) -(92 + 71) ;end end else local v152=0 + 0 ;local v153;local v154;while true do if (v152==(0 -0)) then v153=v77[767 -(574 + 191) ];v154=v75[v77[3 + 0 ]];v152=1;end if (v152==(2 -1)) then v75[v153 + 1 ]=v154;v75[v153]=v154[v77[3 + 0 + 1 ]];break;end end end elseif ((v78<=33) or (4770==2904)) then v75[v77[851 -(254 + 595) ]]= not v75[v77[129 -(55 + 71) ]];elseif ((v78>(44 -10)) or (3903==4536)) then v75[v77[1792 -(573 + 1217) ]]=v75[v77[3]] + v75[v77[10 -6 ]] ;else local v250=v77[(843 -(497 + 345)) + 1 ];v75[v250](v13(v75,v250 + (1 -0) ,v77[942 -(714 + 225) ]));end elseif ((744==744) and (v78<=(110 -72))) then if ((4093<=4845) and (v78<=(49 -13))) then do return;end elseif (v78==37) then if (v75[v77[1 + 1 ]]~=v75[v77[(1 + 4) -1 ]]) then v69=v69 + (807 -(118 + 117 + 571)) ;else v69=v77[51 -((1358 -(605 + 728)) + 23) ];end else v75[v77[1 + 1 ]]=v75[v77[1889 -(927 + 959) ]] -v75[v77[4]] ;end elseif (v78<=(131 -92)) then if (v75[v77[734 -(16 + 716) ]] or (1979>=2836)) then v69=v69 + (1 -0) ;else v69=v77[100 -(11 + 86) ];end elseif ((1569<=3647) and (v78==(97 -57))) then v75[v77[287 -(175 + 110) ]]=v29(v66[v77[3]],nil,v61);else local v254=v77[4 -2 ];v75[v254](v75[v254 + ((3 + 1) -3) ]);end elseif (v78<=(1858 -(503 + 1293))) then if ((1833<=2668) and (v78<=(142 -91))) then if (v78<=46) then if ((v78<=(32 + 11)) or (4046>=4927)) then if ((3686==3686) and (v78>(1103 -(810 + 251)))) then local v156=0 + 0 ;local v157;local v158;while true do if (v156==(0 + 0)) then v157=v77[3 -1 ];v158={};v156=1;end if ((4623>=2787) and (v156==1)) then for v352=1 + 0 + 0 , #v74 do local v353=v74[v352];for v367=0, #v353 do local v368=533 -(43 + 490) ;local v369;local v370;local v371;while true do if ((3467>477) and (v368==(734 -((2628 -1917) + 22)))) then v371=v369[(7 + 0) -5 ];if ((v370==v75) and (v371>=v157)) then local v414=859 -(240 + 619) ;while true do if ((v414==(0 + 0)) or (3288>=3541)) then v158[v371]=v370[v371];v369[1 -0 ]=v158;break;end end end break;end if ((2234>=1230) and (v368==0)) then v369=v353[v367];v370=v369[1 + 0 ];v368=1745 -(1344 + 400) ;end end end end break;end end else v69=v77[408 -(255 + 150) ];end elseif (v78<=(35 + 9)) then if (v75[v77[2 + 0 ]]==v77[16 -12 ]) then v69=v69 + 1 ;else v69=v77[3];end elseif ((v78>(145 -100)) or (343==1786)) then v75[v77[(4823 -3082) -(404 + 1335) ]][v77[409 -(183 + 223) ]]=v77[4 -0 ];else v75[v77[2 + 0 ]]=v60[v77[2 + 1 + 0 ]];end elseif (v78<=(385 -(10 + 327))) then if ((v78==47) or (3557==4540)) then local v160=0 + 0 ;local v161;local v162;local v163;local v164;while true do if ((2570>2409) and (v160==(340 -((607 -(457 + 32)) + 220)))) then for v354=v161,v70 do v164=v164 + 1 + 0 ;v75[v354]=v162[v164];end break;end if ((v160==((191 + 259) -(108 + 341))) or (261>1267) or (2609>=3234)) then v70=(v163 + v161) -(1 + 0) ;v164=0 -0 ;v160=1495 -(711 + 782) ;end if ((1272<3858) and (v160==(0 -0))) then v161=v77[471 -(270 + 199) ];v162,v163=v68(v75[v161](v75[v161 + 1 + 0 ]));v160=1;end end else local v165=(3221 -(832 + 570)) -(547 + 33 + 1239) ;local v166;while true do if ((3664==3664) and (v165==(0 -0))) then v166=v77[2 + 0 ];v75[v166]=v75[v166](v13(v75,v166 + 1 + 0 ,v77[2 + 1 ]));break;end end end elseif ((v78<=(127 -78)) or (3033>=4031)) then local v167=v77[2 + 0 ];local v168=v75[v167];local v169=v77[1170 -(645 + 137 + 385) ];for v215=1,v169 do v168[v215]=v75[v167 + v215 ];end elseif (v78>(1840 -(1010 + 780))) then v75[v77[2 + 0 ]]={};else v75[v77[9 -7 ]]= #v75[v77[3]];end elseif (v78<=(164 -108)) then if ((1941>=450) and (v78<=(1889 -(1045 + 791)))) then if (v78>(131 -(279 -200))) then v75[v77[2 -0 ]]=v75[v77[508 -(351 + 154) ]] -v75[v77[1578 -(1281 + 142 + 151) ]] ;else local v171=266 -(28 + 238) ;local v172;while true do if ((0 -0)==v171) then v172=v77[1561 -(1381 + 178) ];v75[v172]=v75[v172]();break;end end end elseif ((v78<=(51 + 3)) or (1401==4668)) then local v173=v77[2];local v174=v75[v77[3 + 0 ]];v75[v173 + (797 -(588 + 208)) ]=v174;v75[v173]=v174[v77[2 + 2 ]];elseif (v78==(189 -134)) then if (v75[v77[2 + 0 ]] or (4646<324)) then v69=v69 + 1 ;else v69=v77[473 -(381 + 89) ];end else local v262=v77[2 + 0 ];local v263=v77[4];local v264=v262 + 2 ;local v265={v75[v262](v75[v262 + (1 -0) ],v75[v264])};for v321=1,v263 do v75[v264 + v321 ]=v265[v321];end local v266=v265[1157 -(1074 + 82) ];if v266 then local v358=0 -0 ;while true do if ((2776>=1321) and (v358==(1784 -(214 + 1570)))) then v75[v264]=v266;v69=v77[1458 -(990 + 465) ];break;end end else v69=v69 + 1 + 0 ;end end elseif (((3833==3833) and (v78<=59)) or (487>2303)) then if ((v78<=(25 + (86 -54))) or (4503==3462)) then v75[v77[2 + 0 ]]=v77[11 -8 ]~=(1726 -(1668 + 58)) ;elseif (v78>(684 -(512 + 114))) then v75[v77[5 -3 ]][v77[3]]=v75[v77[8 -4 ]];else for v324=v77[(1806 -(884 + 916)) -4 ],v77[2 + 1 ] do v75[v324]=nil;end end elseif (v78<=(12 + 48)) then do return v75[v77[2 + 0 ]];end elseif (v78>(205 -144)) then v75[v77[1996 -(109 + 1885) ]]=v75[v77[(3081 -1609) -(736 + 533 + 200) ]][v77[7 -(656 -(232 + 421)) ]];elseif ((553<=1543) and ((v75[v77[817 -(98 + (2606 -(1569 + 320))) ]]<v75[v77[830 -(802 + 24) ]]) or (1240>3370))) then v69=v69 + ((1 + 0) -0) ;else v69=v77[3 -0 ];end elseif ((2015==2015) and ((v78<=(11 + 61)) or (2481==4682))) then if (v78<=(52 + 15)) then if (((4727>=208) and (v78<=(11 + 53))) or (4241<=2332)) then if (v78>63) then if ((280<3851) and (v77[1 + 1 ]==v75[v77[11 -7 ]])) then v69=v69 + (3 -2) ;else v69=v77[1 + 1 + 1 ];end else local v179=v77[1 + 1 ];local v180=v75[v179];for v218=v179 + 1 + 0 ,v77[3 + 0 ] do v7(v180,v75[v218]);end end elseif ((v78<=(31 + 34)) or (3007>3194) or (2364<1157)) then if  not v75[v77[1435 -(797 + 636) ]] then v69=v69 + (4 -(9 -6)) ;else v69=v77[(2227 -(316 + 289)) -(1427 + 192) ];end elseif ((v78==(23 + (112 -69))) or (1167>1278)) then v75[v77[4 -2 ]]=v75[v77[3]] * v75[v77[4 + 0 ]] ;else local v274=0;local v275;local v276;local v277;while true do if (1==v274) then v277=0 + 0 + 0 ;for v380=v275,v77[(1783 -(666 + 787)) -(192 + 134) ] do v277=v277 + (1277 -(316 + 960)) ;v75[v380]=v276[v277];end break;end if (v274==(0 + 0)) then v275=v77[2];v276={v75[v275](v13(v75,v275 + 1 + 0 ,v70))};v274=3 -2 ;end end end elseif ((v78<=69) or (1145<=1082)) then if ((v78==(619 -(83 + 468))) or (3105==4881)) then local v181=1806 -(1202 + 604) ;local v182;local v183;local v184;while true do if ((426 -(360 + 65))==v181) then v184=0 -0 ;for v360=v182,v77[6 -2 ] do local v361=0;while true do if (v361==(0 -0)) then v184=v184 + (326 -(45 + 280)) ;v75[v360]=v183[v184];break;end end end break;end if (v181==(0 + 0)) then v182=v77[2 + 0 ];v183={v75[v182](v13(v75,v182 + 1 + 0 ,v70))};v181=1;end end else local v185=v77[1 + 1 ];do return v13(v75,v185,v185 + v77[3] );end end elseif (v78<=(129 -59)) then local v186=v77[2];local v187=v75[v186];for v219=v186 + 1 ,v77[3] do v7(v187,v75[v219]);end elseif ((v78>(1982 -(340 + 1571))) or (2136>=2946) or (1887>4878)) then local v278=v66[v77[3]];local v279;local v280={};v279=v10({},{__index=function(v327,v328) local v329=0;local v330;while true do if (((0 + 0)==v329) or (4087>4116)) then v330=v280[v328];return v330[1][v330[2]];end end end,__newindex=function(v331,v332,v333) local v334=1772 -(1733 + 39) ;local v335;while true do if (v334==(0 -0)) then v335=v280[v332];v335[1][v335[2]]=v333;break;end end end});for v336=1035 -(125 + 909) ,v77[4] do local v337=1948 -(1096 + 797 + 55) ;local v338;while true do if (v337==(0 + 0)) then v69=v69 + (1 -0) ;v338=v65[v69];v337=1 + 0 ;end if (v337==(513 -(409 + 103))) then if ((1106<=1266) and (v338[237 -(46 + 190) ]==18)) then v280[v336-(96 -((305 -(79 + 175)) + 44)) ]={v75,v338[729 -(228 + 498) ]};else v280[v336-(1 + 0) ]={v60,v338[7 -4 ]};end v74[ #v74 + (1906 -(830 + 1075)) ]=v280;break;end end end v75[v77[526 -(303 + 221) ]]=v29(v278,v279,v61);else v75[v77[1271 -(231 + 1038) ]]= #v75[v77[3]];end elseif (v78<=(65 + 12)) then if ((3155<4650) and (v78<=((2380 -1144) -(171 + 991)))) then if (v78==(300 -227)) then v75[v77[5 -3 ]]=v29(v66[v77[7 -4 ]],nil,v61);else v75[v77[2 + (899 -(503 + 396)) ]]=v75[v77[10 -7 ]] * v75[v77[11 -7 ]] ;end elseif (v78<=75) then v75[v77[(183 -(92 + 89)) -0 ]]= not v75[v77[3]];elseif (v78==76) then v60[v77[9 -6 ]]=v75[v77[1250 -(111 + 1137) ]];else local v285=158 -(91 + 67) ;local v286;local v287;local v288;while true do if (v285==(2 -1)) then v288=0;for v388=v286,v77[4] do local v389=0 + 0 ;while true do if ((2165<=2521) and (v389==(523 -(423 + 100)))) then v288=v288 + 1 + 0 ;v75[v388]=v287[v288];break;end end end break;end if (v285==0) then v286=v77[5 -3 ];v287={v75[v286](v75[v286 + (772 -(326 + 445)) ])};v285=4 -(5 -2) ;end end end elseif ((3774>=1839) and (v78<=(178 -(51 + 47)))) then if ((2811==2811) and (v78<=((108 + 73) -103))) then local v191=711 -((2075 -1545) + 181) ;local v192;while true do if ((2146>1122) and (v191==(881 -(614 + 267)))) then v192=v77[34 -(19 + 13) ];v75[v192]=v75[v192](v13(v75,v192 + (1 -(0 + 0)) ,v77[6 -3 ]));break;end end elseif (v78>(179 -100)) then local v289=0 -(0 + 0) ;local v290;local v291;while true do if (((2861>661) and (0==v289)) or (56==3616)) then v290=v77[1 + 1 ];v291={};v289=1 -0 ;end if (1==v289) then for v390=1 -0 , #v74 do local v391=v74[v390];for v398=0, #v391 do local v399=1812 -(618 + 675 + 519) ;local v400;local v401;local v402;while true do if (v399==(1 -0)) then v402=v400[4 -2 ];if (((v401==v75) and (v402>=v290)) or (2421<622)) then v291[v402]=v401[v402];v400[1]=v291;end break;end if (v399==(0 -0)) then v400=v391[v398];v401=v400[4 -(8 -5) ];v399=1;end end end end break;end end else v75[v77[4 -2 ]]=v75[v77[2 + 1 ]][v75[v77[4]]];end elseif ((1009<=1130) and (v78<=(17 + 8 + 56))) then local v193=v77[4 -2 ];v75[v193](v13(v75,v193 + 1 + 0 ,v77[1 + (2 -0) ]));elseif ((2758<2980) and (v78>(52 + 30))) then local v294=v77[2];v75[v294]=v75[v294](v75[v294 + (1097 -(709 + 387)) ]);else v75[v77[1860 -(673 + 1185) ]]=v75[v77[8 -5 ]][v75[v77[12 -8 ]]];end v69=v69 + ((1245 -(485 + 759)) -0) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...)
